name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    services:
      # PostgreSQL service for integration tests (optional)
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Create .env file for tests
      run: |
        echo "DATABASE_URL=sqlite:///./test.db" > .env
        # Alternative for PostgreSQL tests:
        # echo "DATABASE_URL=postgresql://testuser:testpass@localhost:5432/testdb" > .env

    - name: Run linting
      run: |
        pip install flake8 black isort
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check code formatting (optional - remove if too strict)
        # black --check src tests
        # isort --check-only src tests

    - name: Run tests with pytest
      run: |
        pytest -v --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # Don't fail if codecov is down

  test-scraper:
    runs-on: ubuntu-latest
    needs: test  # Run after main tests pass

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create test environment
      run: |
        echo "DATABASE_URL=sqlite:///./test_scraper.db" > .env
        # Create a test servers.json
        echo '[{"id": "test", "name": "Test Server", "ip": "localhost", "port": 25565}]' > servers.json

    - name: Test scraper runs without errors
      run: |
        cd src
        python scraper.py
        # Check if the lock file mechanism works
        timeout 5s python scraper.py || exit_code=$?
        if [ "${exit_code:-0}" -eq 124 ]; then
          echo "Lock mechanism working correctly"
        elif [ "${exit_code:-0}" -eq 1 ]; then
          echo "Lock mechanism prevented duplicate run"
        else
          echo "Unexpected exit code: ${exit_code:-0}"
          exit 1
        fi

  security-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit

    - name: Security check with Safety
      run: |
        pip install -r requirements.txt
        safety check --json --continue-on-error

    - name: Security check with Bandit
      run: |
        bandit -r src -f json -o bandit-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
